@using DartsScoreboardGames.Theming
@inherits LayoutComponentBase
@implements IDisposable

@inject CustomThemeProvider CustomTheme

@* Required *@
<MudThemeProvider Theme="@CustomTheme.Instance.Value" @bind-IsDarkMode=@CustomTheme.DarkMode />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    <MudIconButton Style="position:absolute; top: 5px; right: 5px;" Icon=@("fa-moon " + (CustomTheme.DarkMode ? "fa-solid" : "fa-regular")) aria-label="toggle dark mode" OnClick=@(() => { CustomTheme.DarkMode = !CustomTheme.DarkMode; }) />

    @*  <MudAppBar Elevation="1">
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar> *@
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>


@code {

    protected override void OnInitialized() {
		CustomTheme.OnThemeChanged += ChangeHandler;
	}

	public void Dispose() {
		CustomTheme.OnThemeChanged -= ChangeHandler;
	}

    private async void ChangeHandler(object? sender, EventArgs e) =>
		await InvokeAsync(StateHasChanged);
}