
@inject GameStateProvider GameStateProvider
@inject AvatarImageProvider AvatarImageProvider

<div>
    <MudDialog>
        <DialogContent>
            <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                <MudTabPanel Text="Existing">
                    @foreach (var player in ExistingPlayers) {
                        <MudButton OnClick="@(async () => await AddPlayer(player))">@player.Name</MudButton>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Create New">
                    @foreach (var item in AvatarImageProvider.Avatars)
                    {
                        <MudAvatar>
                            <MudImage Src=@item ></MudImage>
                        </MudAvatar>
                    }
                    <MudTextField @bind-Value="NewPlayerName" Label="Name" Variant="Variant.Text"></MudTextField>
                    <MudButton OnClick="@(async () => await AddPlayer(new(NewPlayerName)))">Add</MudButton>
                </MudTabPanel>
            </MudTabs>
        </DialogContent>
    </MudDialog>
</div>


@code{
    [CascadingParameter]
    private MudDialog? Me { get; set; }


    private Player[] ExistingPlayers = [
        new("Louie"),
        new("Also Louie")
    ];

    public string NewPlayerName { get; set; } = default!;
    public string NewAvatar { get; set; } = default!;


    private async Task AddPlayer(Player player) {
        GameStateProvider.AddPlayer(player);
        await Me?.CloseAsync();
    }
}
